// render/test-connection.js
// Script para testar conex√µes localmente

const { Queue } = require('bullmq')

async function testRedisConnection() {
  console.log('üîç Testando conex√£o com Redis...')

  const connection = {
    host: process.env.UPSTASH_REDIS_HOST || 'localhost',
    port: parseInt(process.env.UPSTASH_REDIS_PORT || '6379', 10),
    password: process.env.UPSTASH_REDIS_PASSWORD || '',
  }

  console.log('üì° Configura√ß√£o Redis:', {
    host: connection.host,
    port: connection.port,
    hasPassword: !!connection.password
  })

  try {
    const testQueue = new Queue('test-connection', { connection })

    console.log('‚è≥ Tentando conectar...')
    await testQueue.getWaiting()

    console.log('‚úÖ Conex√£o com Redis bem-sucedida!')
    await testQueue.close()

    return true
  } catch (error) {
    console.error('‚ùå Erro ao conectar com Redis:', error.message)
    console.error('Stack trace:', error.stack)

    if (error.code === 'ECONNREFUSED') {
      console.error('\nüí° Poss√≠veis solu√ß√µes:')
      console.error('1. Verifique se as vari√°veis de ambiente est√£o configuradas')
      console.error('2. Verifique se o Redis/Upstash est√° acess√≠vel')
      console.error('3. Verifique se a senha est√° correta')
    }

    return false
  }
}

async function testDatabaseConnection() {
  console.log('\nüîç Testando conex√£o com banco de dados...')

  try {
    const { PrismaClient } = require('@prisma/client')
    const prisma = new PrismaClient()

    console.log('‚è≥ Tentando conectar...')
    await prisma.$queryRaw`SELECT 1`

    console.log('‚úÖ Conex√£o com banco bem-sucedida!')
    await prisma.$disconnect()

    return true
  } catch (error) {
    console.error('‚ùå Erro ao conectar com banco:', error.message)
    console.error('Stack trace:', error.stack)

    console.error('\nüí° Poss√≠veis solu√ß√µes:')
    console.error('1. Verifique se DATABASE_URL est√° configurado')
    console.error('2. Verifique se o banco est√° acess√≠vel')
    console.error('3. Execute: npx prisma generate')

    return false
  }
}

async function main() {
  console.log('üöÄ Testando conex√µes do worker...\n')

  // Carregar vari√°veis de ambiente
  require('dotenv').config()

  const redisOk = await testRedisConnection()
  const dbOk = await testDatabaseConnection()

  console.log('\nüìä Resumo dos testes:')
  console.log(`Redis: ${redisOk ? '‚úÖ OK' : '‚ùå FALHOU'}`)
  console.log(`Banco: ${dbOk ? '‚úÖ OK' : '‚ùå FALHOU'}`)

  if (redisOk && dbOk) {
    console.log('\nüéâ Todas as conex√µes est√£o funcionando!')
    console.log('Voc√™ pode iniciar o worker com: npm run dev')
  } else {
    console.log('\n‚ö†Ô∏è  Algumas conex√µes falharam. Verifique as configura√ß√µes.')
    process.exit(1)
  }
}

main().catch(console.error)
